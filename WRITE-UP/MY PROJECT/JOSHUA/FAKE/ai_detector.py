import tkinter as tk
import webbrowser

def show_ai_detector(container):
    for widget in container.winfo_children():
        widget.destroy()

    heading_label = tk.Label(container, text="Advanced AI Image Detector", bg="#EEEEEE", font=("Helvetica", 24))
    heading_label.pack(pady=5)

    frame = tk.Frame(container, bg="#EEEEEE", padx=0, pady=0)
    frame.pack(pady=10, fill='x')

    subheading_text = (
        "Upload or input your image URL below, and within seconds our AI image detector will determine "
        "if any of them have been generated by AI. Our AI image detector evaluates image pixels, smoothness, "
        "and other AI image patterns to detect AI generation. Tip: For reliable results, your image should be of "
        "adequate resolution and quality."
    )
    
    subheading_label = tk.Label(
        frame, 
        text=subheading_text, 
        bg="#EEEEEE", 
        font=("Helvetica", 16),
        justify='center',
        wraplength=container.winfo_width() - 60  # Adjusting for padding
    )
    subheading_label.pack(pady=10, padx=10)

    def open_url():
        webbrowser.open("https://contentatscale.ai/ai-image-detector/", new=0)

    upload_button = tk.Button(
        container,
        text="CLICK HERE TO GET STARTED",
        font=("Helvetica", 16, "bold"),
        bg="#007BFF",
        fg="white",
        activebackground="#0056b3",
        activeforeground="white",
        padx=20, pady=10,
        borderwidth=2,
        relief="raised",
        command=open_url,
        cursor="hand2"  # Add cursor pointer
    )
    upload_button.pack(pady=20)

    trademark_label = tk.Label(
        container,
        text="Â© Developed by: Abdulakeem Sukurat",
        bg="#EEEEEE",
        font=("Helvetica", 12),
        justify='center'
    )
    trademark_label.pack(pady=100)

# Create the main window
root = tk.Tk()
root.title("Content Detector")

# Set the window size
root.geometry("800x600")

# Create a canvas for the navigation bar
nav_canvas = tk.Canvas(root, height=120, bg="#FFFFFF")
nav_canvas.pack(fill=tk.X)

# Create custom fonts for the navigation bar items
logo_font = tk.font.Font(family="Helvetica", size=20, weight="bold")
nav_font = tk.font.Font(family="Helvetica", size=12, weight="normal")

# Add the logo to the center of the navigation bar
logo_label = tk.Label(root, text="DEEPFAKE DETECTOR", fg="#000000", bg="#FFFFFF", font=logo_font)
logo_label.place(x=40, y=40)

# Create menu items on the right side
menu_items = ["AI Detector", "Request an Invite", "Agency Solutions", "About Us", "Blog"]
menu_actions = [
    show_ai_detector,
    lambda container: None,
    lambda container: None,
    lambda container: None,
    lambda container: None
]

# Create a container with padding and background color
container = tk.Frame(root, bg="#EEEEEE", width=760, height=460, padx=20, pady=20)
container.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
container.pack_propagate(False)

# Function to create menu buttons and assign actions
for i, (item, action) in enumerate(zip(menu_items, menu_actions)):
    menu_label = tk.Label(root, text=item, fg="#000000", bg="#FFFFFF", font=nav_font, cursor="hand2")
    menu_label.place(x=700 + i*140, y=45)
    menu_label.bind("<Button-1>", lambda e, act=action: act(container))
    
    # Define hover effects
    def on_enter(e):
        e.widget.config(bg='#F5F5F5', fg='black')

    def on_leave(e):
        e.widget.config(bg='#FFFFFF', fg='#000000')

    menu_label.bind("<Enter>", on_enter)
    menu_label.bind("<Leave>", on_leave)

# Run the main loop
root.mainloop()
